/**
 * Created by ederbd on 09/06/16.
 */
angular.module('goDataTable', []).directive("goDataTable", function () {
    return {
        require: "goDataTable",
        controller: function ($scope, $element, $attrs, $location, $window) {

            var getIdEditBtn = function (pid) {
                return  "goDT_"+$attrs.id+"_EditBtn_"+ pid;
            };

            var getIdDeleteBtn = function (pid) {
                return  "goDT_"+$attrs.id+"_DeleteBtn_"+ pid;
            };

            var getIdRow = function (pid) {
                return  "goDT_"+$attrs.id+"_Row_"+ pid;
            };

            var getEditBtnTemplate = function (pid) {
                var sClick =  (pid? 'onclick="document.getElementById(\''+getIdEditBtn(pid)+'\').click()"' :'');
                return  '<button class="btn btn-primary"'+sClick+'><i class="fa fa-pencil"></i></button>';
            };

            var getDeleteBtnTemplate = function (pid) {
                var sClick =  (pid? 'onclick="document.getElementById(\''+getIdDeleteBtn(pid)+'\').click()"' :'');
                return  '<button class="btn btn-danger"'+sClick+'><i class="fa fa-trash-o"></i></button>';
            };

            var columns = [
                {
                    "class": "edit-table-cell",
                    "orderable": false,
                    "data": null,
                    "defaultContent": getEditBtnTemplate()
                }//,
                // {
                //     "class": "edit-table-cell",
                //     "orderable": false,
                //     "data": null,
                //     "defaultContent": getEditBtnTemplate()
                // }
            ];

            this.registraItem = function (data) {
                columns.splice(columns.length - 1, 0, {"data": data.name , "orderable": ((data.notOrderable != null && data.notOrderable == '') ? false : true) });
            };

            var elemento = $('#' + $attrs.id);
            var dataTable = null;

            this.criaDataTable = function () {
                dataTable = elemento.DataTable({
                    //  dom: 'T clear rtip', //Remove filtro de pesquisa
                    //  "processing": true,
                    //  select: true,
                    "bLengthChange": false,
                    dom: 'T clear Brtip',
                    "orderCellsTop": true,
                    "pageLength": 5,
                    //"lengthMenu": [[5, 10, 25, 50, 100], [5, 10, 25, 50, 100]],
                    "bProcessing": false,
                    "serverSide": true,
                    "ajax": $attrs.ajax,
                    select: true,
                    "fnRowCallback": function(nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                        var id =aData.id;
                        var doClick = function () {
                            if ($attrs.editUrl) {
                                $window.location.href = $attrs.editUrl + '/' + id;
                            }
                        }
                        if ($(nRow).find('button')){
                            $(nRow).find('button').prop('onclick', null).off('click');
                            $(nRow).find('button').on("click", doClick);
                            $(nRow).attr("id", getIdRow(aData.id));
                            $(nRow).find('button').attr("id", getIdEditBtn(aData.id));
                        }
                        return nRow;
                    },
                    "language": {
                        "sEmptyTable": "Nenhum registro encontrado",
                        "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                        "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                        "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                        "sInfoPostFix": "",
                        "sInfoThousands": ".",
                        "sLengthMenu": "_MENU_ resultados por página",
                        "sZeroRecords": "Nenhum registro encontrado",
                        "sSearch": "Pesquisar",
                        "oPaginate": {
                            "sNext": "Próximo",
                            "sPrevious": "Anterior",
                            "sFirst": "Primeiro",
                            "sLast": "Último"
                        },
                        "oAria": {
                            "sSortAscending": ": Ordenar colunas de forma ascendente",
                            "sSortDescending": ": Ordenar colunas de forma descendente"
                        }
                    } ,
                    responsive: {
                        details: {
                            renderer: function ( api, rowIdx, columns ) {
                                var _data = dataTable.row( rowIdx ).data();
                                var data = $.map( columns, function ( col, i ) {
                                    var template = '';
                                    if (col.hidden){
                                        if (col.columnIndex != columns.length-1){
                                            template =  '<tr data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
                                                '<td>'+ (col.title ? '<span class="dtr-title">'+ col.title+'</span>' :'') + '<span class="dtr-data">'+col.data+'</span>' + '</td>'+
                                                '</tr>';
                                        }
                                    };
                                    return template;
                                } ).join('');
                                return data ? $('<table/>').append( data ) : false;
                            }
                        }
                    }
                    ,"columns": columns
                });

                // pesquisa com timout para diminuir o numero de requisicoes desnecessárias.
                var search = $.fn.dataTable.util.throttle(
                    function (that, val) {
                        that.search(val).draw();
                    }, 1000
                );

                dataTable.columns().every(function () {
                    var that = this;
                    var id = $(this.header()).attr("name") + "-search"
                    $("#" + id).on('keyup change', function () {
                        if (that.search() !== this.value) {
                            search(that, this.value);
                        }
                        if(this.value == "") {
                            search(that, "");
                        }
                    });
                });

            }
        },
        link: function (scope, element, attr, ctrl) {
            ctrl.criaDataTable()
        }
    };
});

angular.module('goDataTable').directive("goDataTableItem", function () {
    return {
        require: "^goDataTable",
        link: function (scope, element, attr, ctrl) {
            ctrl.registraItem(attr);
        }
    };
});
